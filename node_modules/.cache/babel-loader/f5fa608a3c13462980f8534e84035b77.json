{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { jobReducer } from './reducers/jobReducer'; // import formReducers from './reducers/formReducers';\n// import userReducer from './reducers/userReducers';\n// import authReducer from './reducers/authReducers';\n\nconst initalState = {};\nconst middleware = [thunk];\nconst rootReducer = combineReducers({\n  jobs: jobReducer //   user: userReducer,\n  //   auth: authReducer,\n  //   form: formReducers,\n\n});\nconst store = createStore(rootReducer, initalState, applyMiddleware(...middleware));\nexport default store;\nexport const dispatchAction = action => store.dispatch(action);","map":{"version":3,"sources":["/Users/dixithmaram/Documents/dev-jobs/src/library/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","jobReducer","initalState","middleware","rootReducer","jobs","store","dispatchAction","action","dispatch"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,EAApB;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,MAAMI,WAAW,GAAGN,eAAe,CAAC;AAChCO,EAAAA,IAAI,EAAEJ,UAD0B,CAEpC;AACA;AACA;;AAJoC,CAAD,CAAnC;AAOA,MAAMK,KAAK,GAAGT,WAAW,CAACO,WAAD,EAAcF,WAAd,EAA2BH,eAAe,CAAC,GAAGI,UAAJ,CAA1C,CAAzB;AAEA,eAAeG,KAAf;AACA,OAAO,MAAMC,cAAc,GAAGC,MAAM,IAAIF,KAAK,CAACG,QAAN,CAAeD,MAAf,CAAjC","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { jobReducer } from './reducers/jobReducer'\n// import formReducers from './reducers/formReducers';\n// import userReducer from './reducers/userReducers';\n// import authReducer from './reducers/authReducers';\n\nconst initalState = {};\n\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n    jobs: jobReducer\n//   user: userReducer,\n//   auth: authReducer,\n//   form: formReducers,\n});\n\nconst store = createStore(rootReducer, initalState, applyMiddleware(...middleware));\n\nexport default store;\nexport const dispatchAction = action => store.dispatch(action);\n"]},"metadata":{},"sourceType":"module"}