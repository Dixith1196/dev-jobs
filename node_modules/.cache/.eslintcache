[{"/Users/dixithmaram/Documents/dev-jobs/src/index.js":"1","/Users/dixithmaram/Documents/dev-jobs/src/App.js":"2","/Users/dixithmaram/Documents/dev-jobs/src/reportWebVitals.js":"3","/Users/dixithmaram/Documents/dev-jobs/src/theme.js":"4","/Users/dixithmaram/Documents/dev-jobs/src/global.js":"5","/Users/dixithmaram/Documents/dev-jobs/src/Containers/Dashboard/dashboard.js":"6","/Users/dixithmaram/Documents/dev-jobs/src/Components/Navbar/Navbar.js":"7","/Users/dixithmaram/Documents/dev-jobs/src/library/store/store.js":"8","/Users/dixithmaram/Documents/dev-jobs/src/Containers/JobInfo/JobInfo.js":"9","/Users/dixithmaram/Documents/dev-jobs/src/library/store/actions/jobActions.js":"10","/Users/dixithmaram/Documents/dev-jobs/src/Components/Search/Search.js":"11","/Users/dixithmaram/Documents/dev-jobs/src/library/store/reducers/jobReducer.js":"12","/Users/dixithmaram/Documents/dev-jobs/src/library/store/actions/themeActions.js":"13","/Users/dixithmaram/Documents/dev-jobs/src/library/store/reducers/themeReducer.js":"14","/Users/dixithmaram/Documents/dev-jobs/src/Components/Footer/Footer.js":"15"},{"size":704,"mtime":1622614046340,"results":"16","hashOfConfig":"17"},{"size":1618,"mtime":1622615568275,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1622333472386,"results":"19","hashOfConfig":"17"},{"size":435,"mtime":1622537647395,"results":"20","hashOfConfig":"17"},{"size":396,"mtime":1622602751368,"results":"21","hashOfConfig":"17"},{"size":4172,"mtime":1622607683476,"results":"22","hashOfConfig":"17"},{"size":2602,"mtime":1622615621909,"results":"23","hashOfConfig":"17"},{"size":887,"mtime":1622614184575,"results":"24","hashOfConfig":"17"},{"size":5438,"mtime":1622617514666,"results":"25","hashOfConfig":"17"},{"size":4152,"mtime":1622612739768,"results":"26","hashOfConfig":"17"},{"size":3656,"mtime":1622609953335,"results":"27","hashOfConfig":"17"},{"size":1688,"mtime":1622601772406,"results":"28","hashOfConfig":"17"},{"size":517,"mtime":1622607742332,"results":"29","hashOfConfig":"17"},{"size":1009,"mtime":1622617241100,"results":"30","hashOfConfig":"17"},{"size":1145,"mtime":1622599194271,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1vuxe49",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/dixithmaram/Documents/dev-jobs/src/index.js",[],["69","70"],"/Users/dixithmaram/Documents/dev-jobs/src/App.js",["71","72","73"],"import React, { useState, useEffect } from 'react';\nimport {setLightTheme, setDarkTheme, toggleTheme} from '../src/library/store/actions/themeActions'\nimport { connect } from 'react-redux'\nimport logo from './logo.svg';\nimport './App.css';\nimport Dashboard from '../src/Containers/Dashboard/dashboard'\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport NavBar from \"../src/Components/Navbar/Navbar\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\n\nimport JobInfo from \"./Containers/JobInfo/JobInfo\"\n\nfunction App(props) {\n\n   const [mounted, setMounted] = useState(false)\n\n\n  if(!mounted){\n    if( localStorage.getItem(\"toggle\") == true){\n      props.toggleTheme(true)\n    }else{\n      props.toggleTheme(false)\n    }\n  }\n\n  useEffect(() =>{\n     setMounted(true)\n  },[])\n\n\n  // if( localStorage.getItem(\"toggle\") == false){\n  //   props.toggleTheme(true)\n  // }else{\n  //   props.toggleTheme(false)\n  // }\n  \n  return (\n<div className=\"App\">\n<ThemeProvider theme={props.theme === 'light' ? lightTheme : darkTheme}>\n<GlobalStyles />\n<Router>\n        <NavBar />\n        <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route exact path='/JobInfo/:id' component={JobInfo} />\n          </Switch>\n      </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  theme: state.themes.theme\n})\n\n\nexport default connect(mapStateToProps, {setLightTheme, setDarkTheme, toggleTheme})(App);\n","/Users/dixithmaram/Documents/dev-jobs/src/reportWebVitals.js",[],"/Users/dixithmaram/Documents/dev-jobs/src/theme.js",[],"/Users/dixithmaram/Documents/dev-jobs/src/global.js",[],"/Users/dixithmaram/Documents/dev-jobs/src/Containers/Dashboard/dashboard.js",["74","75","76","77","78","79"],"import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n// import NavBar from \"../../Components/Navbar/Navbar\"\nimport { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs , fetchFilterJobs}  from '../../library/store/actions/jobActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport \"./dashboard.css\"\nimport { Container } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from \"@material-ui/core/Avatar\"\n\nimport Search from '../../Components/Search/Search'\n\n function Dashboard(props) {\n\n\n  let history = useHistory();\n  const [mounted, setMounted] = useState(false)\n \n\n  if(!mounted){\n    // Code for componentWillMount here\n    // This code is called only one time before intial render\n   \n\n    navigator.geolocation.getCurrentPosition(function(position) {\n    if(!position.coords.latitude && !position.coords.longitude){\n    }else{\n       props.fetchTermJobs(\"Java\")\n      // props.fetchCurrentLocationJobs(position.coords.latitude, position.coords.longitude) \n    }\n    });\n  }\n\n  useEffect(() =>{\n    setMounted(true)\n  },[])\n\n  const goToJob = (id) => {\n    history.push(`/JobInfo/${id}`)\n  }\n  \n  function generateRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  \n  const classes = useStyles();\n        return(\n          <Container>\n           {/* <NavBar />  */}\n          <Search style={{position: \"relative\", zIndex: 10}} />\n          <Container  style={{padding: \"7%\"}}>\n          <Grid container spacing={4} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n          {props.jobs.map((job) => (\n                  <Grid item xs={12} sm={6} md={4} key={props.jobs.id}>\n                      <Card onClick={() => goToJob(job.id)} className={classes.root}>\n                      <CardContent>\n                          <Avatar style={{backgroundColor: generateRandomColor()}} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                          {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                          {user.id}\n                          </Typography> */}\n                          <Typography noWrap numberOfLines={1} ellipsizeMode='tail' variant=\"h5\" component=\"h2\">\n                          {job.company}\n                          </Typography>\n                          <Typography noWrap  numberOfLines={1} ellipsizeMode='tail' className={classes.pos} color=\"textSecondary\">\n                          {job.location}\n                          </Typography>\n                          <Typography noWrap numberOfLines={1}  variant=\"body2\" component=\"p\">\n                          {job.type}\n                          <br />\n                          {'\"a benevolent smile\"'}\n                          </Typography>\n                      </CardContent>\n                  </Card>\n                  </Grid>\n                          ))}\n          </Grid>\n      </Container>\n      </Container>\n        )\n    }\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs.items\n})\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  }\n  ,\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    borderRadius:\"10%\",\n    flex:\"1\"\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  root: {\n      // flexGrow: 1,\n    },\n});\n\n\nexport default connect(mapStateToProps, { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs,\n  fetchFilterJobs\n})(Dashboard);\n\n\n","/Users/dixithmaram/Documents/dev-jobs/src/Components/Navbar/Navbar.js",["80","81","82","83","84","85"],"import React, { useState , useEffect} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { connect } from 'react-redux'\nimport { setLightTheme, setDarkTheme, toggleTheme } from '../../library/store/actions/themeActions'\n import Search from '../Search/Search'\nimport Switch from \"react-switch\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// import SearchIcon from \"@material-ui/icons/Search\";\n\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport { Container } from \"@material-ui/core\";\n\nfunction NavBar(props) {\n\n  // const [mounted, setMounted] = useState(false)\n \n  const handleClick = () => {\n    if(props.toggle == false){\n      props.toggleTheme(true)\n      localStorage.setItem(\"toggle\", true)\n      localStorage.setItem(\"theme\", \"dark\")\n    }else{\n      props.toggleTheme(false)\n      localStorage.setItem(\"toggle\", false)\n      localStorage.setItem(\"theme\", \"light\")\n    }\n  }\n\n  // if(!mounted){\n  //   if( localStorage.getItem(\"toggle\") == true){\n  //     props.toggleTheme(true)\n  //   }else{\n  //     props.toggleTheme(false)\n  //   }\n  // }\n\n  // useEffect(() =>{\n  //   // setMounted(true)\n  //   console.log(\"--use effect calls--\")\n  //   if( localStorage.getItem(\"toggle\") == true){\n  //     props.toggleTheme(true)\n  //   }else{\n  //     props.toggleTheme(false)\n  //   }\n  // },[])\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <NavLink exact to=\"/\" className=\"nav-logo\">\n            devjobs\n            {/* <i className=\"fas fa-code\"></i> */}\n          </NavLink>\n          <div style={{paddingRight:\"10px\"}}>\n          <WbSunnyIcon style={{ color: \"white\"}}/>\n          </div>\n          \n          <Switch\n            checked={props.toggle}\n            onChange={handleClick}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"react-switch\"\n            id=\"material-switch\"\n          />\n          <Brightness3Icon style={{ color: \"white\"}}/>\n        </div>\n       {/* <Search /> */}\n      </nav>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  theme: state.themes.theme,\n  toggle: state.themes.toggle\n})\n\n\nexport default connect(mapStateToProps, {setLightTheme, setDarkTheme, toggleTheme})(NavBar);","/Users/dixithmaram/Documents/dev-jobs/src/library/store/store.js",[],"/Users/dixithmaram/Documents/dev-jobs/src/Containers/JobInfo/JobInfo.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"/Users/dixithmaram/Documents/dev-jobs/src/library/store/actions/jobActions.js",[],"/Users/dixithmaram/Documents/dev-jobs/src/Components/Search/Search.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState } from 'react'\nimport './Search.css'\n\nimport { connect } from 'react-redux'\nimport { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs , fetchFilterJobs}  from '../../library/store/actions/jobActions';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Input from \"@material-ui/core/Input\"\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from \"@material-ui/core/Button\"\n\n function Search(props) {\n  \n  const [query, setQuery] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [checked, setChecked] = useState(false)\n\n const handleInputChange = event => {\n    setQuery(event.target.value)\n};\n\n  const handleLocationInputChange = event => {\n    setLocation(event.target.value)\n    };\n\n    const handleCheck  = () => {\n      setChecked(!checked)\n    }\n\n\n    const filterResults = () => {\n      console.log(\"filter results\")\n      if(query != \"\" && location == \"\" && checked == false){\n        props.fetchTermJobs(query)\n      }else if(query == \"\" && location != \"\" && checked == false){\n        props.fetchGivenLocationJobs(location)\n      }else if(query == \"\" && location == \"\" && checked == true){\n        props.fetchFullTimeJobs(checked)\n      }else if(query != \"\" && location != \"\"){\n        props.fetchFilterJobs(query, location, false)\n      }else if(location != \"\" && checked == true){\n        props.fetchFilterJobs(\"\", location, checked)\n      }else if(query != \"\" && checked == true){\n        props.fetchFilterJobs(query,\"\", checked)\n      }\n      else if(query != \"\" && location != \"\" && checked == true){\n        props.fetchFilterJobs(query, location, checked)\n      }else{\n        props.fetchCurrentLocationJobs(props.latitude, props.longitude) \n      }\n    }\n\n    return (\n        // <div>\n             <div className=\"down-content\">\n            <Input\n            placeholder=\"Filter by title, companies, expertise...\"\n          id=\"input-with-icon-adornment\"\n          className=\"TextField-filter\"\n          value={query}\n          onChange={handleInputChange}\n\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon color=\"primary\" />\n            </InputAdornment>\n          }\n        />\n            <Input\n            placeholder=\"Filter bu location...\"\n          id=\"input-with-icon-adornment\"\n          className=\"TextField-loc\"\n         \n          value={location}\n          onChange={handleLocationInputChange}\n\n\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <LocationOnIcon color=\"primary\" />\n            </InputAdornment>\n          }\n        />\n        <FormControlLabel className=\"check-input\"\n        control={\n          <Checkbox\n          checked={checked}\n          onChange={handleCheck}\n            // checked={state.checkedB}\n            // onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Full Time Only\"\n        \n      />\n      <Button onClick={filterResults} className=\"search-button\" variant=\"contained\" color=\"primary\">\n  Search\n</Button>\n        </div>\n        // </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs.items\n})\n\nexport default connect(mapStateToProps, { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs,\n  fetchFilterJobs\n})(Search);","/Users/dixithmaram/Documents/dev-jobs/src/library/store/reducers/jobReducer.js",["127","128"],"import { \n  fetchJobs, \n  showJobs, \n  fetchCurrentLocationJobs, \n  fetchTermJobs, \n  fetchGivenLocationJobs, \n  fetchFullTimeJobs, \n  fetchFilterJobs,\n  displayJobs,\n  getJobDescription\n} from '../actions/jobActions'\n\nconst initialState = {\n    items: [],\n    item: {},\n    loading: false,\n    page: 0,\n    prevY: 0,\n    fullTime: false,\n    description: \"\",\n    location: \"\",\n    latitude: \"\",\n    longitude: \"\"\n}\n\nexport const jobReducer = (state=initialState, action) => {\n    switch(action.type) {\n      case fetchJobs:\n        return {\n          ...state,\n          items: action.payload\n        };\n        case fetchCurrentLocationJobs: \n         return {\n           ...state,\n           items: action.payload,\n           latitude: action.lat,\n           longitude: action.long\n         }\n         case fetchTermJobs: \n         return {\n           ...state,\n           items: action.payload,\n           description: action.desc\n         }\n         case fetchGivenLocationJobs:\n         return {\n          ...state,\n          items: action.payload,\n          location: action.location\n         }\n         case fetchFullTimeJobs:\n           return {\n             ...state,\n             items: action.payload,\n             fullTime: action.fullTime\n           }\n           case fetchFilterJobs: \n           return {\n             ...state,\n             items: action.payload,\n             description: action.description,\n             fullTime: action.full_time,\n             location: action.location\n           }\n           case getJobDescription: \n           return {\n             ...state,\n             item: action.payload\n           }\n       default: \n       return state\n    }\n}","/Users/dixithmaram/Documents/dev-jobs/src/library/store/actions/themeActions.js",["129"],"\nconst actionType = {\n    setLightTheme: \"SET_LIGHT_THEME\",\n    setDarkTheme: \"SET_DARK_THEME\",\n    toggleTheme: \"TOGGLE_THEME\"\n}\n\nexport const toggleTheme = (tog) => dispatch => {\n    dispatch({\n        type: toggleTheme,\n        payload: tog\n    })\n}\n\nexport const setLightTheme = () => dispatch => {\n    dispatch({\n        type: setLightTheme,\n        payload: \"light\"\n      })\n  } \n\n  export const setDarkTheme = () => dispatch => {\n    dispatch({\n        type: setDarkTheme,\n        payload: \"dark\"\n      })\n  } ","/Users/dixithmaram/Documents/dev-jobs/src/library/store/reducers/themeReducer.js",["130"],"/Users/dixithmaram/Documents/dev-jobs/src/Components/Footer/Footer.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":12},{"ruleId":"135","severity":1,"message":"139","line":7,"column":13,"nodeType":"137","messageId":"138","endLine":7,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":23,"column":40,"nodeType":"142","messageId":"143","endLine":23,"endColumn":42},{"ruleId":"135","severity":1,"message":"144","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"145","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":22},{"ruleId":"135","severity":1,"message":"146","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":19},{"ruleId":"135","severity":1,"message":"147","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":17},{"ruleId":"135","severity":1,"message":"148","line":13,"column":8,"nodeType":"137","messageId":"138","endLine":13,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":119,"column":3,"nodeType":"151","messageId":"143","endLine":119,"endColumn":7},{"ruleId":"135","severity":1,"message":"152","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"153","line":1,"column":28,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"154","line":6,"column":9,"nodeType":"137","messageId":"138","endLine":6,"endColumn":15},{"ruleId":"135","severity":1,"message":"155","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":18},{"ruleId":"135","severity":1,"message":"156","line":14,"column":10,"nodeType":"137","messageId":"138","endLine":14,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":21,"column":21,"nodeType":"142","messageId":"143","endLine":21,"endColumn":23},{"ruleId":"135","severity":1,"message":"157","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":20},{"ruleId":"135","severity":1,"message":"144","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"158","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":12},{"ruleId":"135","severity":1,"message":"159","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":13},{"ruleId":"135","severity":1,"message":"160","line":9,"column":8,"nodeType":"137","messageId":"138","endLine":9,"endColumn":18},{"ruleId":"135","severity":1,"message":"154","line":13,"column":8,"nodeType":"137","messageId":"138","endLine":13,"endColumn":14},{"ruleId":"135","severity":1,"message":"161","line":15,"column":22,"nodeType":"137","messageId":"138","endLine":15,"endColumn":30},{"ruleId":"135","severity":1,"message":"162","line":16,"column":8,"nodeType":"137","messageId":"138","endLine":16,"endColumn":16},{"ruleId":"135","severity":1,"message":"163","line":17,"column":8,"nodeType":"137","messageId":"138","endLine":17,"endColumn":14},{"ruleId":"135","severity":1,"message":"164","line":18,"column":8,"nodeType":"137","messageId":"138","endLine":18,"endColumn":12},{"ruleId":"135","severity":1,"message":"165","line":21,"column":8,"nodeType":"137","messageId":"138","endLine":21,"endColumn":20},{"ruleId":"135","severity":1,"message":"166","line":22,"column":8,"nodeType":"137","messageId":"138","endLine":22,"endColumn":17},{"ruleId":"135","severity":1,"message":"167","line":23,"column":8,"nodeType":"137","messageId":"138","endLine":23,"endColumn":22},{"ruleId":"135","severity":1,"message":"168","line":24,"column":8,"nodeType":"137","messageId":"138","endLine":24,"endColumn":20},{"ruleId":"135","severity":1,"message":"147","line":26,"column":8,"nodeType":"137","messageId":"138","endLine":26,"endColumn":17},{"ruleId":"135","severity":1,"message":"155","line":27,"column":8,"nodeType":"137","messageId":"138","endLine":27,"endColumn":18},{"ruleId":"135","severity":1,"message":"169","line":29,"column":8,"nodeType":"137","messageId":"138","endLine":29,"endColumn":24},{"ruleId":"135","severity":1,"message":"170","line":30,"column":8,"nodeType":"137","messageId":"138","endLine":30,"endColumn":21},{"ruleId":"135","severity":1,"message":"171","line":31,"column":8,"nodeType":"137","messageId":"138","endLine":31,"endColumn":20},{"ruleId":"135","severity":1,"message":"146","line":32,"column":8,"nodeType":"137","messageId":"138","endLine":32,"endColumn":19},{"ruleId":"135","severity":1,"message":"172","line":33,"column":8,"nodeType":"137","messageId":"138","endLine":33,"endColumn":19},{"ruleId":"135","severity":1,"message":"173","line":90,"column":11,"nodeType":"137","messageId":"138","endLine":90,"endColumn":28},{"ruleId":"135","severity":1,"message":"174","line":7,"column":8,"nodeType":"137","messageId":"138","endLine":7,"endColumn":17},{"ruleId":"140","severity":1,"message":"175","line":36,"column":16,"nodeType":"142","messageId":"143","endLine":36,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":36,"column":34,"nodeType":"142","messageId":"143","endLine":36,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":36,"column":51,"nodeType":"142","messageId":"143","endLine":36,"endColumn":53},{"ruleId":"140","severity":1,"message":"141","line":38,"column":22,"nodeType":"142","messageId":"143","endLine":38,"endColumn":24},{"ruleId":"140","severity":1,"message":"175","line":38,"column":40,"nodeType":"142","messageId":"143","endLine":38,"endColumn":42},{"ruleId":"140","severity":1,"message":"141","line":38,"column":57,"nodeType":"142","messageId":"143","endLine":38,"endColumn":59},{"ruleId":"140","severity":1,"message":"141","line":40,"column":22,"nodeType":"142","messageId":"143","endLine":40,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":40,"column":40,"nodeType":"142","messageId":"143","endLine":40,"endColumn":42},{"ruleId":"140","severity":1,"message":"141","line":40,"column":57,"nodeType":"142","messageId":"143","endLine":40,"endColumn":59},{"ruleId":"140","severity":1,"message":"175","line":42,"column":22,"nodeType":"142","messageId":"143","endLine":42,"endColumn":24},{"ruleId":"140","severity":1,"message":"175","line":42,"column":40,"nodeType":"142","messageId":"143","endLine":42,"endColumn":42},{"ruleId":"140","severity":1,"message":"175","line":44,"column":25,"nodeType":"142","messageId":"143","endLine":44,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":44,"column":42,"nodeType":"142","messageId":"143","endLine":44,"endColumn":44},{"ruleId":"140","severity":1,"message":"175","line":46,"column":22,"nodeType":"142","messageId":"143","endLine":46,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":46,"column":39,"nodeType":"142","messageId":"143","endLine":46,"endColumn":41},{"ruleId":"140","severity":1,"message":"175","line":49,"column":21,"nodeType":"142","messageId":"143","endLine":49,"endColumn":23},{"ruleId":"140","severity":1,"message":"175","line":49,"column":39,"nodeType":"142","messageId":"143","endLine":49,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":49,"column":56,"nodeType":"142","messageId":"143","endLine":49,"endColumn":58},{"ruleId":"135","severity":1,"message":"176","line":3,"column":3,"nodeType":"137","messageId":"138","endLine":3,"endColumn":11},{"ruleId":"135","severity":1,"message":"177","line":9,"column":3,"nodeType":"137","messageId":"138","endLine":9,"endColumn":14},{"ruleId":"135","severity":1,"message":"178","line":2,"column":7,"nodeType":"137","messageId":"138","endLine":2,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":21,"column":43,"nodeType":"142","messageId":"143","endLine":21,"endColumn":45},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactBootStrap' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PropTypes' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","'useState' is defined but never used.","'useEffect' is defined but never used.","'Search' is defined but never used.","'IconButton' is defined but never used.","'Container' is defined but never used.","'useHistory' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'ButtonBase' is defined but never used.","'useTheme' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'clsx' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'PlayArrowIcon' is defined but never used.","'SkipNextIcon' is defined but never used.","'ExploreIcon' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'TextField' is defined but never used.","Expected '!==' and instead saw '!='.","'showJobs' is defined but never used.","'displayJobs' is defined but never used.","'actionType' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]