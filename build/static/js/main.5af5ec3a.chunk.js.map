{"version":3,"sources":["library/store/actions/themeActions.js","library/store/actions/jobActions.js","Components/Search/Search.js","Containers/Dashboard/dashboard.js","Components/Navbar/Navbar.js","theme.js","global.js","Components/Footer/Footer.js","Containers/JobInfo/JobInfo.js","App.js","reportWebVitals.js","library/store/reducers/jobReducer.js","library/store/reducers/themeReducer.js","library/store/store.js","index.js"],"names":["toggleTheme","tog","dispatch","type","payload","setLightTheme","setDarkTheme","cors_url","BASE_URL","getJobDescription","jobId","JOB_BASE_URL","cancelToken1","axios","CancelToken","source","get","cancelToken","token","params","markdown","then","res","data","fetchCurrentLocationJobs","lat","long","fetchTermJobs","desc","description","console","log","fetchGivenLocationJobs","location","fetchFullTimeJobs","fullTime","fetchFilterJobs","searchTerm","full_time","fetchJobs","page","setPage","connect","state","jobs","items","props","useState","query","setQuery","setLocation","checked","setChecked","className","Input","placeholder","id","value","onChange","event","target","startAdornment","InputAdornment","position","color","FormControlLabel","control","Checkbox","name","label","Button","onClick","latitude","longitude","variant","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","borderRadius","flex","pos","marginBottom","hasNextPage","history","useHistory","mounted","setMounted","adjustPage","amount","prevPage","generateRandomColor","i","Math","floor","random","navigator","geolocation","getCurrentPosition","coords","useEffect","classes","Container","style","zIndex","padding","Grid","container","spacing","direction","justify","alignItems","map","job","item","xs","sm","md","Card","push","CardContent","Avatar","backgroundColor","alt","src","Typography","noWrap","numberOfLines","ellipsizeMode","component","company","Pagination","Prev","Item","Ellipsis","active","Next","theme","themes","toggle","exact","to","paddingRight","localStorage","setItem","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","lightTheme","text","nav","body","darkTheme","GlobalStyles","createGlobalStyle","FooterContainer","styled","div","Footer","justifyContent","fontWeight","Component","media","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","red","jobDescription","useParams","window","JSDOM","DOMPurify","createDOMPurify","jd","paddingLeft","flexDirection","company_url","href","CardHeader","action","subheader","dangerouslySetInnerHTML","__html","sanitize","how_to_apply","getItem","path","Dashboard","JobInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","themeReducer","middleware","thunk","rootReducer","combineReducers","persistConfig","key","storage","whitelist","pReducer","persistReducer","store","createStore","applyMiddleware","persistStore","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.5af5ec3a.chunk.js","sourcesContent":["\n\nexport const toggleTheme = (tog) => dispatch => {\n    dispatch({\n        type: toggleTheme,\n        payload: tog\n    })\n}\n\nexport const setLightTheme = () => dispatch => {\n    dispatch({\n        type: setLightTheme,\n        payload: \"light\"\n      })\n  } \n\n  export const setDarkTheme = () => dispatch => {\n    dispatch({\n        type: setDarkTheme,\n        payload: \"dark\"\n      })\n  } ","import axios from \"axios\";\n\nconst actionType = {\n    fetchJobs: 'FETCH_JOBS',\n    fetchCurrentLocationJobs: 'FETCH_CURRENT_LOCATION_JOBS',\n    fetchTermJobs: 'FETCH_TERM_JOBS',\n    fetchGivenLocationJobs: 'FETCH_GIVEN_LOCATION_JOBS',\n    fetchFullTimeJobs: 'FETCH_FULL_TIME_JOBS',\n    fetchFilterJobs: 'FETCH_FILTER_JOBS',\n    displayJobs: 'DISPLAY_JOBS',\n    getJobDescription: 'GET_JOB_DESCRIPTION',\n    setPage: 'SET_PAGE'\n}\n\n const cors_url = \"https://cors-anywhere.herokuapp.com/\"\n\n// const cors_url = \"https://api.allorigins.win/raw?url=\"\n\nconst BASE_URL = cors_url + 'https://jobs.github.com/positions.json?'\n\n// const cors_url = \"https://cors-anywhere.herokuapp.com/\"\n\n// const BASE_URL = cors_url + 'https://jobs.github.com/positions.json?'\n\n\nexport const getJobDescription = (jobId) => dispatch => {\n    const JOB_BASE_URL = cors_url + `https://jobs.github.com/positions/${jobId}.json`\n    const cancelToken1 = axios.CancelToken.source()\n\n    axios.get(JOB_BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: {\n            markdown: true\n     },   \n    })\n      .then(res => {\n        dispatch({\n            type: getJobDescription,\n            payload: res.data\n          })\n      }\n      );\n}\n\nexport const fetchCurrentLocationJobs = (lat, long) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: { \n            markdown: true, \n            lat: lat,\n            long: long\n         }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchCurrentLocationJobs,\n            lat: lat,\n            long: long,\n            payload: res.data\n          })\n      }  \n      );\n}\n\nexport const fetchTermJobs = (desc) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    \n    axios.get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        \n        params: {\n          markdown: true,\n          description: desc\n        }\n      })\n      .then(res => {\n          console.log(res, \"---response is here---\")\n        dispatch({\n            type: fetchTermJobs,\n            desc: desc,\n            payload: res.data\n          })\n      }\n      \n      );\n}\n\nexport const fetchGivenLocationJobs = (location) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(`${BASE_URL}location=${location}`, {\n        cancelToken: cancelToken1.token,\n      })\n      .then(res => {\n        dispatch({\n            type: fetchGivenLocationJobs,\n            payload: res.data,\n            location: location\n          })\n      }\n      \n      );\n}\n\n\nexport const fetchFullTimeJobs = (fullTime) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(`${BASE_URL}full_time=${fullTime}`, {\n        cancelToken: cancelToken1.token,\n        // params: { \n        //     markdown: true,\n        //     full_time: fullTime\n        //  }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchFullTimeJobs,\n            fullTime: fullTime,\n            payload: res.data\n          })\n      }\n      \n      );\n}\n\nexport const fetchFilterJobs = (searchTerm, location, fullTime) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(`${BASE_URL}description=${searchTerm}location=${location}full_time=${fullTime}`, {\n        cancelToken: cancelToken1.token,\n        // params: { \n        //     markdown: true,\n        //     description: searchTerm,\n        //     full_time: fullTime,\n        //     location: location\n        //  }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchFilterJobs,\n            payload: res.data,\n            description: searchTerm,\n            full_time: fullTime,\n            location: location\n          })\n      }\n      \n      );\n}\n\n\nexport const fetchJobs = (page) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: { markdown: true, page: 2 }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchJobs,\n            page: page,\n            payload: res.data\n          })\n      }\n      \n      );\n  };\n\n  export const setPage = (page) => dispatch => {\n     dispatch({\n      type: setPage,\n      payload: page,\n     })\n  }\n\nexport const displayJobs = () => ({\n    type: actionType.showJobs\n})","import React, { useState } from 'react'\nimport './Search.css'\n\nimport { connect } from 'react-redux'\nimport { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs , fetchFilterJobs}  from '../../library/store/actions/jobActions';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Input from \"@material-ui/core/Input\"\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from \"@material-ui/core/Button\"\n\n function Search(props) {\n  \n  const [query, setQuery] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [checked, setChecked] = useState(false)\n\n const handleInputChange = event => {\n    setQuery(event.target.value)\n};\n\n  const handleLocationInputChange = event => {\n    setLocation(event.target.value)\n    };\n\n    const handleCheck  = () => {\n      setChecked(!checked)\n    }\n\n\n    const filterResults = () => {\n      console.log(\"filter results\")\n      if(query !== \"\" && location ===\"\" && checked === false){\n        props.fetchTermJobs(query)\n      }else if(query === \"\" && location !== \"\" && checked === false){\n        props.fetchGivenLocationJobs(location)\n      }else if(query === \"\" && location === \"\" && checked === true){\n        props.fetchFullTimeJobs(checked)\n      }else if(query !== \"\" && location !== \"\"){\n        props.fetchFilterJobs(query, location, false)\n      }else if(location !== \"\" && checked === true){\n        props.fetchFilterJobs(\"\", location, checked)\n      }else if(query !== \"\" && checked === true){\n        props.fetchFilterJobs(query,\"\", checked)\n      }\n      else if(query !== \"\" && location !== \"\" && checked === true){\n        props.fetchFilterJobs(query, location, checked)\n      }else{\n        props.fetchCurrentLocationJobs(props.latitude, props.longitude) \n      }\n    }\n\n    return (\n        // <div>\n             <div className=\"down-content\">\n            <Input\n            placeholder=\"Filter by title, companies, expertise...\"\n          id=\"input-with-icon-adornment\"\n          className=\"TextField-filter\"\n          value={query}\n          onChange={handleInputChange}\n\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon color=\"primary\" />\n            </InputAdornment>\n          }\n        />\n            <Input\n            placeholder=\"Filter bu location...\"\n          id=\"input-with-icon-adornment\"\n          className=\"TextField-loc\"\n         \n          value={location}\n          onChange={handleLocationInputChange}\n\n\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <LocationOnIcon color=\"primary\" />\n            </InputAdornment>\n          }\n        />\n        <FormControlLabel className=\"check-input\"\n        control={\n          <Checkbox\n          checked={checked}\n          onChange={handleCheck}\n            // checked={state.checkedB}\n            // onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Full Time Only\"\n        \n      />\n      <Button onClick={filterResults} className=\"search-button\" variant=\"contained\" color=\"primary\">\n  Search\n</Button>\n        </div>\n        // </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs.items\n})\n\nexport default connect(mapStateToProps, { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs,\n  fetchFilterJobs\n})(Search);","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs , fetchFilterJobs, setPage}  from '../../library/store/actions/jobActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport \"./dashboard.css\"\nimport { Container } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from \"@material-ui/core/Avatar\"\n\nimport { Pagination } from 'react-bootstrap'\n\nimport Search from '../../Components/Search/Search'\n\n function Dashboard(props) {\n\n\n  let history = useHistory();\n  const [mounted, setMounted] = useState(false)\n \n\n  if(!mounted){\n    // Code for componentWillMount here\n    // This code is called only one time before intial render\n   \n\n    navigator.geolocation.getCurrentPosition(function(position) {\n    if(!position.coords.latitude && !position.coords.longitude){\n    }else{\n       props.fetchJobs()\n      // props.fetchCurrentLocationJobs(position.coords.latitude, position.coords.longitude) \n    }\n    });\n  }\n\n  useEffect(() =>{\n    setMounted(true)\n  },[])\n\n  function adjustPage(amount) {\n    setPage(prevPage => prevPage + amount)\n  }\n\n  const goToJob = (id) => {\n    history.push(`/JobInfo/${id}`)\n  }\n  \n  function generateRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  \n  const {page, hasNextPage} = props\n\n  const classes = useStyles();\n        return(\n          <Container>\n           {/* <NavBar />  */}\n          <Search style={{position: \"relative\", zIndex: 10}} />\n          <Container  style={{padding: \"7%\"}}>\n          <Grid container spacing={4} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n          {props.jobs.map((job) => (\n                  <Grid item xs={12} sm={6} md={4} key={props.jobs.id}>\n                      <Card onClick={() => goToJob(job.id)} className={classes.root}>\n                      <CardContent>\n                          <Avatar style={{backgroundColor: generateRandomColor()}} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                          {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                          {user.id}\n                          </Typography> */}\n                          <Typography noWrap numberOfLines={1} ellipsizeMode='tail' variant=\"h5\" component=\"h2\">\n                          {job.company}\n                          </Typography>\n                          <Typography noWrap  numberOfLines={1} ellipsizeMode='tail' className={classes.pos} color=\"textSecondary\">\n                          {job.location}\n                          </Typography>\n                          <Typography noWrap numberOfLines={1}  variant=\"body2\" component=\"p\">\n                          {job.type}\n                          <br />\n                          {'\"a benevolent smile\"'}\n                          </Typography>\n                      </CardContent>\n                  </Card>\n                  </Grid>\n                          ))}\n          </Grid>\n      </Container>\n      <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n      {page > 2 && <Pagination.Ellipsis />}\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n      </Container>\n        )\n    }\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs.items,\n    page: state.jobs.page,\n    hasNextPage: state.jobs.hasNextPage\n})\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  }\n  ,\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    borderRadius:\"10%\",\n    flex:\"1\"\n  },\n  pos: {\n    marginBottom: 12,\n  }\n});\n\n\nexport default connect(mapStateToProps, { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs,\n  fetchFilterJobs, setPage\n})(Dashboard);\n\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { connect } from 'react-redux'\nimport { setLightTheme, setDarkTheme, toggleTheme } from '../../library/store/actions/themeActions'\nimport Switch from \"react-switch\";\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\n\nfunction NavBar(props) {\n\n  // const [mounted, setMounted] = useState(false)\n \n  const handleClick = () => {\n    if(props.toggle === false){\n      props.toggleTheme(true)\n      localStorage.setItem(\"toggle\", true)\n      localStorage.setItem(\"theme\", \"dark\")\n    }else{\n      props.toggleTheme(false)\n      localStorage.setItem(\"toggle\", false)\n      localStorage.setItem(\"theme\", \"light\")\n    }\n  }\n\n  // if(!mounted){\n  //   if( localStorage.getItem(\"toggle\") == true){\n  //     props.toggleTheme(true)\n  //   }else{\n  //     props.toggleTheme(false)\n  //   }\n  // }\n\n  // useEffect(() =>{\n  //   // setMounted(true)\n  //   console.log(\"--use effect calls--\")\n  //   if( localStorage.getItem(\"toggle\") == true){\n  //     props.toggleTheme(true)\n  //   }else{\n  //     props.toggleTheme(false)\n  //   }\n  // },[])\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <NavLink exact to=\"/\" className=\"nav-logo\">\n            devjobs\n            {/* <i className=\"fas fa-code\"></i> */}\n          </NavLink>\n          <div style={{paddingRight:\"10px\"}}>\n          <WbSunnyIcon style={{ color: \"white\"}}/>\n          </div>\n          \n          <Switch\n            checked={props.toggle}\n            onChange={handleClick}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"react-switch\"\n            id=\"material-switch\"\n          />\n          <Brightness3Icon style={{ color: \"white\"}}/>\n        </div>\n       {/* <Search /> */}\n      </nav>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  theme: state.themes.theme,\n  toggle: state.themes.toggle\n})\n\n\nexport default connect(mapStateToProps, {setLightTheme, setDarkTheme, toggleTheme})(NavBar);","export const lightTheme = {\n    // body: '#E2E2E2',\n    text: '#363537',\n    // toggleBorder: '#FFF',\n    // gradient: 'linear-gradient(#39598A, #79D7ED)',\n\n    nav: \"#5865E0\", body: \"#FFFFFF\", Card: \"#FFFFFF\"\n\n  }\n  \n  export const darkTheme = {\n    // body: '#363537',\n    text: '#FFFFFF',\n    // toggleBorder: '#6B8096',\n    // gradient: 'linear-gradient(#091236, #1E215D)',\n\n    nav: \"#5865E0\", body: \"#131822\", Card: \"#19212D\"\n  }","\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n \n  .MuiCard-root {\n    background: ${({ theme }) => theme.Card} !important;\n    color: ${({ theme }) => theme.text};\n  }\n\n    `","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\"\nconst FooterContainer = styled.div`\n  text-align: center;\n//   position: absolute;\n\n  bottom: 0;\n  width: 100% !important;\n  height: 100px !important ;\n  background: white;\n`;\n\nclass Footer extends Component {\n  render() {\n    return (\n      <FooterContainer>\n        <div style={{display: \"flex\", justifyContent:\"space-between\"}}>\n        <div>\n        <Typography component=\"h5\" variant=\"h5\">\n            So Digital lnc.\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            sodigital.co\n          </Typography>\n          </div>\n        {/* <div className=\"site-button\" > */}\n        <div style={{display: \"flex\", justifyContent:\"space-between\"}}>\n      <Button  className=\"search-button\" variant=\"contained\" color=\"primary\" style={{fontWeight: \"bolder\", margin:\"10px\"}}>\n        Apply Now\n    </Button>\n    </div>\n      {/* </div> */}\n        </div>\n      </FooterContainer>\n    );\n  }\n}\n\nexport default Footer;","import React, { useEffect, useState} from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { getJobDescription }  from '../../library/store/actions/jobActions';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport \"./JobInfo.css\"\nimport { Container } from 'react-bootstrap';\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Footer from \"../../Components/Footer/Footer\"\nimport { red } from '@material-ui/core/colors';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport createDOMPurify from 'dompurify'\nimport { JSDOM } from 'jsdom'\n\nimport { useParams } from \"react-router\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //   maxWidth: 345,\n    // },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }));\n\n\nfunction JobInfo(props) {\n    // const classes = useStyles();\n    const classes = useStyles();\n\n    // const theme = useTheme();\n    // const [expanded, setExpanded] = React.useState(false);\n\n    const [mounted, setMounted] = useState(false)\n\n    let { id } = useParams();\n\n    const window = (new JSDOM('')).window\n    const DOMPurify = createDOMPurify(window)\n\n    if(!mounted){\n      // Code for componentWillMount here\n      // This code is called only one time before intial render\n      props.getJobDescription(id)\n    }   \n  \n\n    useEffect(() =>{\n      setMounted(true)\n    },[])\n  \n\n    // const handleExpandClick = () => {\n    //   setExpanded(!expanded);\n    // };\n\n    const jd = props.jobDescription\n\n    return (\n        <Container style={{paddingLeft:\"20%\", paddingRight:\"20%\"}}>\n        <Card className=\"root\">\n            <div className=\"logo-part\">\n                <Typography component=\"h5\" variant=\"h5\" className=\"topo1\">\n                    R\n                </Typography>\n            </div>\n      <div className=\"details\" style={{\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n      }}>\n        <CardContent className=\"content\">\n          <Typography component=\"h5\" variant=\"h5\">\n           {jd.company}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" >\n           {jd.company_url}\n          </Typography>\n        </CardContent>\n      </div>\n      <div className=\"site-button\" >\n      <Button href={jd.company_url}  className=\"search-button\" variant=\"contained\" color=\"none\" style={{fontWeight: \"bolder\", margin:\"30px\"}}>\n        Company site\n    </Button>\n      </div>\n    </Card>\n{/* ============================== */}\n    <div style={{marginBottom:\"20px\"}}>\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //     R\n        //   </Avatar>\n        // }\n        action={\n            <Button href={jd.company_url}  className=\"search-button\" variant=\"contained\" color=\"primary\" style={{fontWeight: \"bolder\", margin:\"30px\"}}>\n            Company site\n        </Button>\n        }\n        title={jd.title}\n        subheader={jd.location}\n      />\n      <CardContent >\n        <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(jd.description) }}>\n     {/* {jd.description} */}\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n{/* ===================================== */}\n<div style={{marginBottom:\"20px\", backgroundColor:\"#8b26c5\"}}>\n<Card className={classes.root} style={{backgroundColor: \"#8b26c5\"}}>\n      <CardHeader\n        title=\"How to Apply\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"white\" component=\"p\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(jd.how_to_apply) }}>\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n    <Footer/>\n    </Container>\n    \n    )\n}\n\nconst mapStateToProps = state => ({\n   jobDescription: state.jobs.item\n})\n\nexport default connect(mapStateToProps, { getJobDescription\n})(JobInfo);\n\n\n","import React, { useState, useEffect } from 'react';\nimport {setLightTheme, setDarkTheme, toggleTheme} from '../src/library/store/actions/themeActions'\nimport { connect } from 'react-redux'\nimport './App.css';\nimport Dashboard from '../src/Containers/Dashboard/dashboard'\nimport NavBar from \"../src/Components/Navbar/Navbar\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\n\nimport JobInfo from \"./Containers/JobInfo/JobInfo\"\n\nfunction App(props) {\n\n   const [mounted, setMounted] = useState(false)\n\n\n  if(!mounted){\n    if( localStorage.getItem(\"toggle\") === true){\n      props.toggleTheme(true)\n    }else{\n      props.toggleTheme(false)\n    }\n  }\n\n  useEffect(() =>{\n     setMounted(true)\n  },[])\n\n\n  // if( localStorage.getItem(\"toggle\") == false){\n  //   props.toggleTheme(true)\n  // }else{\n  //   props.toggleTheme(false)\n  // }\n  \n  return (\n<div className=\"App\">\n<ThemeProvider theme={localStorage.getItem(\"theme\") === 'light' ? lightTheme : darkTheme}>\n<GlobalStyles />\n<Router>\n        <NavBar />\n        <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route exact path='/JobInfo/:id' component={JobInfo} />\n          </Switch>\n      </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  theme: state.themes.theme\n})\n\n\nexport default connect(mapStateToProps, {setLightTheme, setDarkTheme, toggleTheme})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n  fetchJobs, \n  fetchCurrentLocationJobs, \n  fetchTermJobs, \n  fetchGivenLocationJobs, \n  fetchFullTimeJobs, \n  fetchFilterJobs,\n  getJobDescription,\n  setPage\n} from '../actions/jobActions'\n\nconst initialState = {\n    items: [],\n    item: {},\n    loading: false,\n    fullTime: false,\n    description: \"\",\n    location: \"\",\n    latitude: \"\",\n    longitude: \"\",\n\n    page: 0,\n    hasNextPage: false\n}\n\nexport const jobReducer = (state=initialState, action) => {\n    switch(action.type) {\n      case fetchJobs:\n        return {\n          ...state,\n          items: action.payload\n        };\n        case fetchCurrentLocationJobs: \n         return {\n           ...state,\n           items: action.payload,\n           latitude: action.lat,\n           longitude: action.long\n         }\n         case fetchTermJobs: \n         return {\n           ...state,\n           items: action.payload,\n           description: action.desc\n         }\n         case fetchGivenLocationJobs:\n         return {\n          ...state,\n          items: action.payload,\n          location: action.location\n         }\n         case fetchFullTimeJobs:\n           return {\n             ...state,\n             items: action.payload,\n             fullTime: action.fullTime\n           }\n           case fetchFilterJobs: \n           return {\n             ...state,\n             items: action.payload,\n             description: action.description,\n             fullTime: action.full_time,\n             location: action.location\n           }\n           case getJobDescription: \n           return {\n             ...state,\n             item: action.payload\n           }\n           case setPage:\n             return{\n               ...state,\n               page: action.payload\n             }\n       default: \n       return state\n    }\n}","import { setLightTheme, setDarkTheme, toggleTheme } from '../actions/themeActions'\n\nconst initialState = {\n    theme: \"light\",\n    toggle: false\n}\n\nexport const themeReducer = (state=initialState, action) => {\n    switch(action.type){\n        case setLightTheme: \n        return {\n            ...state,\n            theme: action.payload\n        }\n        case setDarkTheme: \n        return {\n            ...state,\n            theme: action.payload\n        }\n        case toggleTheme:\n        if(localStorage.getItem(\"toggle\") === false){\n            return {\n                ...state,\n                theme: \"light\",\n                toggle: action.payload\n            }\n        }else{\n            return {\n                ...state,\n                theme: \"dark\",\n                toggle: action.payload\n            }\n        }\n      \n        default: \n        console.log(initialState.toggle,\"---default hits everytime---\")\n        return{\n            theme: \"light\",\n            toggle: false\n        }\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { jobReducer } from './reducers/jobReducer'\nimport { themeReducer } from './reducers/themeReducer'\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst initalState = {};\n\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n    jobs: jobReducer,\n    themes: themeReducer\n});\n\nconst persistConfig = {\n    key: 'themeReducer',\n    storage: storage,\n    whitelist: [themeReducer] // which reducer want to store\n  };\n  const pReducer = persistReducer(persistConfig, rootReducer);\n\n  \nconst store = createStore(pReducer, initalState, applyMiddleware(...middleware));\n\n\nexport const persistor = persistStore(store);\nexport default store;\nexport const dispatchAction = action => store.dispatch(action);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from '../src/library/store/store'\nimport persistor from '../src/library/store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} persistor={persistor}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}