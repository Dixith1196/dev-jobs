{"version":3,"sources":["library/store/actions/themeActions.js","library/store/actions/jobActions.js","Components/Search/Search.js","Containers/Dashboard/dashboard.js","Components/Navbar/Navbar.js","theme.js","global.js","Components/Footer/Footer.js","Containers/JobInfo/JobInfo.js","App.js","reportWebVitals.js","library/store/reducers/jobReducer.js","library/store/reducers/themeReducer.js","library/store/store.js","index.js"],"names":["toggleTheme","tog","dispatch","type","payload","setLightTheme","setDarkTheme","cors_url","BASE_URL","getJobDescription","jobId","JOB_BASE_URL","cancelToken1","axios","CancelToken","source","get","cancelToken","token","params","markdown","then","res","data","fetchCurrentLocationJobs","lat","long","fetchTermJobs","desc","description","console","log","error","catch","err","fetchGivenLocationJobs","location","fetchFullTimeJobs","fullTime","fetchFilterJobs","searchTerm","full_time","fetchJobs","connect","state","jobs","items","props","useState","query","setQuery","setLocation","checked","setChecked","className","Input","placeholder","id","value","onChange","event","target","startAdornment","InputAdornment","position","color","FormControlLabel","control","Checkbox","name","label","Button","onClick","latitude","longitude","variant","mounted","setMounted","window","JSDOM","DOMPurify","createDOMPurify","navigator","geolocation","getCurrentPosition","coords","useEffect","Container","style","zIndex","padding","Typography","component","dangerouslySetInnerHTML","__html","sanitize","theme","themes","toggle","exact","to","paddingRight","localStorage","setItem","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","lightTheme","text","nav","body","Card","darkTheme","GlobalStyles","createGlobalStyle","FooterContainer","styled","div","Footer","display","justifyContent","fontWeight","margin","Component","useStyles","makeStyles","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","jobDescription","item","classes","useParams","jd","paddingLeft","flex","flexDirection","CardContent","company","company_url","href","marginBottom","root","CardHeader","action","title","subheader","how_to_apply","getItem","path","Dashboard","JobInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","response","loading","themeReducer","middleware","thunk","rootReducer","combineReducers","persistConfig","key","storage","whitelist","pReducer","persistReducer","store","createStore","applyMiddleware","persistStore","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.a685e503.chunk.js","sourcesContent":["\n\nexport const toggleTheme = (tog) => dispatch => {\n    dispatch({\n        type: toggleTheme,\n        payload: tog\n    })\n}\n\nexport const setLightTheme = () => dispatch => {\n    dispatch({\n        type: setLightTheme,\n        payload: \"light\"\n      })\n  } \n\n  export const setDarkTheme = () => dispatch => {\n    dispatch({\n        type: setDarkTheme,\n        payload: \"dark\"\n      })\n  } ","import axios from \"axios\";\n\nconst actionType = {\n    fetchJobs: 'FETCH_JOBS',\n    fetchCurrentLocationJobs: 'FETCH_CURRENT_LOCATION_JOBS',\n    fetchTermJobs: 'FETCH_TERM_JOBS',\n    fetchGivenLocationJobs: 'FETCH_GIVEN_LOCATION_JOBS',\n    fetchFullTimeJobs: 'FETCH_FULL_TIME_JOBS',\n    fetchFilterJobs: 'FETCH_FILTER_JOBS',\n    displayJobs: 'DISPLAY_JOBS',\n    getJobDescription: 'GET_JOB_DESCRIPTION',\n}\n\n //const cors_url = \"https://cors-anywhere.herokuapp.com/\"\n\n const cors_url = \"https://api.allorigins.win/raw?url=\"\n\nconst BASE_URL = cors_url + 'https://jobs.github.com/positions'\n\n// const cors_url = \"https://cors-anywhere.herokuapp.com/\"\n\n// const BASE_URL = cors_url + 'https://jobs.github.com/positions.json?'\n\n\nexport const getJobDescription = (jobId) => dispatch => {\n    const JOB_BASE_URL = cors_url + `https://jobs.github.com/positions/${jobId}.json`\n    const cancelToken1 = axios.CancelToken.source()\n\n    axios.get(JOB_BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: {\n            markdown: true\n     },   \n    })\n      .then(res => {\n        dispatch({\n            type: getJobDescription,\n            payload: res.data\n          })\n      }\n      );\n}\n\nexport const fetchCurrentLocationJobs = (lat, long) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: { \n            markdown: true, \n            lat: lat,\n            long: long\n         }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchCurrentLocationJobs,\n            lat: lat,\n            long: long,\n            payload: res.data\n          })\n      }  \n      );\n}\n\nexport const fetchTermJobs = (desc) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    \n    axios.get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        \n        params: {\n          markdown: true,\n          description: desc\n        }\n      })\n      .then(res => {\n          console.log(res, \"---response is here---\")\n        dispatch({\n            type: fetchTermJobs,\n            desc: desc,\n            payload: res.data,\n            error: res.data.error\n          })\n      }\n      \n      ).catch(err => {\n        dispatch({\n          type: fetchTermJobs,\n          desc: desc,\n          payload: [],\n          error: err\n        })\n      })\n}\n\nexport const fetchGivenLocationJobs = (location) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(`${BASE_URL}location=${location}`, {\n        cancelToken: cancelToken1.token,\n      })\n      .then(res => {\n        dispatch({\n            type: fetchGivenLocationJobs,\n            payload: res.data,\n            location: location,\n            error: res.data.error\n          })\n      }\n      \n      ).catch(err => {\n        dispatch({\n          type: fetchGivenLocationJobs,\n          location: location,\n          payload: [],\n          error: err\n        })\n      })\n}\n\n\nexport const fetchFullTimeJobs = (fullTime) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(`${BASE_URL}full_time=${fullTime}`, {\n        cancelToken: cancelToken1.token,\n        // params: { \n        //     markdown: true,\n        //     full_time: fullTime\n        //  }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchFullTimeJobs,\n            fullTime: fullTime,\n            payload: res.data,\n            error: res.data.error\n          })\n      }\n      \n      ).catch(err => {\n        dispatch({\n          type: fetchFullTimeJobs,\n          fullTime: fullTime,\n          payload: [],\n          error: err\n        })\n      })\n}\n\nexport const fetchFilterJobs = (searchTerm, location, fullTime) => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(`${BASE_URL}description=${searchTerm}location=${location}full_time=${fullTime}`, {\n        cancelToken: cancelToken1.token,\n        // params: { \n        //     markdown: true,\n        //     description: searchTerm,\n        //     full_time: fullTime,\n        //     location: location\n        //  }\n      })\n      .then(res => {\n        dispatch({\n            type: fetchFilterJobs,\n            payload: res.data,\n            description: searchTerm,\n            full_time: fullTime,\n            location: location,\n            error: res.data.error\n          })\n      }\n      \n      ).catch(err => {\n        dispatch({\n          type: fetchFilterJobs,\n          description: searchTerm,\n          full_time: fullTime,\n          location: location,\n          payload: [],\n          error: err\n        })\n      })\n}\n\n\nexport const fetchJobs = () => dispatch => {\n    const cancelToken1 = axios.CancelToken.source()\n    axios.get(BASE_URL, {\n        cancelToken: cancelToken1.token,\n        params: { markdown: true }\n      })\n      .then(res => {\n        console.log(res, \"--response should be here--\")\n        dispatch({\n            type: fetchJobs,\n            payload: res.data,\n            error: res.data.error\n          })\n      }\n      ).catch(err => {\n        dispatch({\n          type: fetchJobs,\n          payload: [],\n          error: err\n        })\n      })\n  };\nexport const displayJobs = () => ({\n    type: actionType.showJobs\n})","import React, { useState } from 'react'\nimport './Search.css'\n\nimport { connect } from 'react-redux'\nimport { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs , fetchFilterJobs}  from '../../library/store/actions/jobActions';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Input from \"@material-ui/core/Input\"\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from \"@material-ui/core/Button\"\n\n function Search(props) {\n  \n  const [query, setQuery] = useState(\"\")\n  const [location, setLocation] = useState(\"\")\n  const [checked, setChecked] = useState(false)\n\n const handleInputChange = event => {\n    setQuery(event.target.value)\n};\n\n  const handleLocationInputChange = event => {\n    setLocation(event.target.value)\n    };\n\n    const handleCheck  = () => {\n      setChecked(!checked)\n    }\n\n\n    const filterResults = () => {\n      console.log(\"filter results\")\n      if(query !== \"\" && location ===\"\" && checked === false){\n        props.fetchTermJobs(query)\n      }else if(query === \"\" && location !== \"\" && checked === false){\n        props.fetchGivenLocationJobs(location)\n      }else if(query === \"\" && location === \"\" && checked === true){\n        props.fetchFullTimeJobs(checked)\n      }else if(query !== \"\" && location !== \"\"){\n        props.fetchFilterJobs(query, location, false)\n      }else if(location !== \"\" && checked === true){\n        props.fetchFilterJobs(\"\", location, checked)\n      }else if(query !== \"\" && checked === true){\n        props.fetchFilterJobs(query,\"\", checked)\n      }\n      else if(query !== \"\" && location !== \"\" && checked === true){\n        props.fetchFilterJobs(query, location, checked)\n      }else{\n        props.fetchCurrentLocationJobs(props.latitude, props.longitude) \n      }\n    }\n\n    return (\n        // <div>\n             <div className=\"down-content\">\n            <Input\n            placeholder=\"Filter by title, companies, expertise...\"\n          id=\"input-with-icon-adornment\"\n          className=\"TextField-filter\"\n          value={query}\n          onChange={handleInputChange}\n\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon color=\"primary\" />\n            </InputAdornment>\n          }\n        />\n            <Input\n            placeholder=\"Filter bu location...\"\n          id=\"input-with-icon-adornment\"\n          className=\"TextField-loc\"\n         \n          value={location}\n          onChange={handleLocationInputChange}\n\n\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <LocationOnIcon color=\"primary\" />\n            </InputAdornment>\n          }\n        />\n        <FormControlLabel className=\"check-input\"\n        control={\n          <Checkbox\n          checked={checked}\n          onChange={handleCheck}\n            // checked={state.checkedB}\n            // onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Full Time Only\"\n        \n      />\n      <Button onClick={filterResults} className=\"search-button\" variant=\"contained\" color=\"primary\">\n  Search\n</Button>\n        </div>\n        // </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs.items\n})\n\nexport default connect(mapStateToProps, { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs,\n  fetchFilterJobs\n})(Search);","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n// import { useHistory } from \"react-router-dom\";\nimport { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs , fetchFilterJobs}  from '../../library/store/actions/jobActions';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport \"./dashboard.css\"\nimport { Container } from 'react-bootstrap';\n// import Grid from '@material-ui/core/Grid';\n// import Avatar from \"@material-ui/core/Avatar\"\nimport createDOMPurify from 'dompurify'\nimport { JSDOM } from 'jsdom'\n\n// import { Pagination } from 'react-bootstrap'\n\nimport Search from '../../Components/Search/Search'\n\n function Dashboard(props) {\n\n\n  // let history = useHistory();\n  const [mounted, setMounted] = useState(false)\n \n  const window = (new JSDOM('')).window\n  const DOMPurify = createDOMPurify(window)\n\n  if(!mounted){\n    // Code for componentWillMount here\n    // This code is called only one time before intial render\n   \n\n    navigator.geolocation.getCurrentPosition(function(position) {\n    if(!position.coords.latitude && !position.coords.longitude){\n    }else{\n      console.log(props.fetchJobs(), \"---error is here---\")  \n       \n      // props.fetchCurrentLocationJobs(position.coords.latitude, position.coords.longitude) \n    }\n    });\n  }\n\n  useEffect(() =>{\n    setMounted(true)\n  },[])\n\n  \n\n  // const goToJob = (id) => {\n  //   history.push(`/JobInfo/${id}`)\n  // }\n  \n  // function generateRandomColor() {\n  //   var letters = '0123456789ABCDEF';\n  //   var color = '#';\n  //   for (var i = 0; i < 6; i++) {\n  //     color += letters[Math.floor(Math.random() * 16)];\n  //   }\n  //   return color;\n  // }\n  \n  // const classes = useStyles();\n        return(\n          <Container>\n           {/* <NavBar />  */}\n          <Search style={{position: \"relative\", zIndex: 10}} />\n          <Container  style={{padding: \"7%\"}}>\n          <Typography  variant=\"body2\"  component=\"p\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(props.fetchJobs()) }}/>\n            {/*  <Grid container spacing={4} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n          {props.jobs.map((job) => (\n                  <Grid item xs={12} sm={6} md={4} key={job.id}>\n                      <Card onClick={() => goToJob(job.id)} className={classes.root}>\n                      <CardContent>\n                          <Avatar style={{backgroundColor: generateRandomColor()}} alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                       <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                          {user.id}\n                          </Typography> \n                          <Typography noWrap  variant=\"h5\" component=\"h2\">\n                          {job.company}\n                          </Typography>\n                          <Typography noWrap    className={classes.pos} color=\"textSecondary\">\n                          {job.location}\n                          </Typography>\n                          <Typography noWrap   variant=\"body2\" component=\"p\">\n                          {job.type}\n                          <br />\n                          {'\"a benevolent smile\"'}\n                          </Typography>\n                      </CardContent>\n                  </Card>\n                  </Grid>\n                          ))}\n          </Grid>*/}\n          <p>{props.error}</p>\n      </Container>\n      </Container>\n        )\n    }\n\nconst mapStateToProps = state => ({\n    jobs: state.jobs.items,\n    error: state.jobs.error\n})\n\n\n// const useStyles = makeStyles({\n//   root: {\n//     minWidth: 275,\n//   }\n//   ,\n//   bullet: {\n//     display: 'inline-block',\n//     margin: '0 2px',\n//     transform: 'scale(0.8)',\n//   },\n//   title: {\n//     fontSize: 14,\n//     borderRadius:\"10%\",\n//     flex:\"1\"\n//   },\n//   pos: {\n//     marginBottom: 12,\n//   }\n// });\n\n\nexport default connect(mapStateToProps, { fetchJobs, fetchCurrentLocationJobs, fetchTermJobs, fetchGivenLocationJobs, fetchFullTimeJobs,\n  fetchFilterJobs\n})(Dashboard);\n\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport { connect } from 'react-redux'\nimport { setLightTheme, setDarkTheme, toggleTheme } from '../../library/store/actions/themeActions'\nimport Switch from \"react-switch\";\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\n\nfunction NavBar(props) {\n\n  // const [mounted, setMounted] = useState(false)\n \n  const handleClick = () => {\n    if(props.toggle === false){\n      props.toggleTheme(true)\n      localStorage.setItem(\"toggle\", true)\n      localStorage.setItem(\"theme\", \"dark\")\n    }else{\n      props.toggleTheme(false)\n      localStorage.setItem(\"toggle\", false)\n      localStorage.setItem(\"theme\", \"light\")\n    }\n  }\n\n  // if(!mounted){\n  //   if( localStorage.getItem(\"toggle\") == true){\n  //     props.toggleTheme(true)\n  //   }else{\n  //     props.toggleTheme(false)\n  //   }\n  // }\n\n  // useEffect(() =>{\n  //   // setMounted(true)\n  //   console.log(\"--use effect calls--\")\n  //   if( localStorage.getItem(\"toggle\") == true){\n  //     props.toggleTheme(true)\n  //   }else{\n  //     props.toggleTheme(false)\n  //   }\n  // },[])\n\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"nav-container\">\n          <NavLink exact to=\"/\" className=\"nav-logo\">\n            devjobs\n            {/* <i className=\"fas fa-code\"></i> */}\n          </NavLink>\n          <div style={{paddingRight:\"10px\"}}>\n          <WbSunnyIcon style={{ color: \"white\"}}/>\n          </div>\n          \n          <Switch\n            checked={props.toggle}\n            onChange={handleClick}\n            onColor=\"#86d3ff\"\n            onHandleColor=\"#2693e6\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"react-switch\"\n            id=\"material-switch\"\n          />\n          <Brightness3Icon style={{ color: \"white\"}}/>\n        </div>\n       {/* <Search /> */}\n      </nav>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  theme: state.themes.theme,\n  toggle: state.themes.toggle\n})\n\n\nexport default connect(mapStateToProps, {setLightTheme, setDarkTheme, toggleTheme})(NavBar);","export const lightTheme = {\n    // body: '#E2E2E2',\n    text: '#363537',\n    // toggleBorder: '#FFF',\n    // gradient: 'linear-gradient(#39598A, #79D7ED)',\n\n    nav: \"#5865E0\", body: \"#FFFFFF\", Card: \"#FFFFFF\"\n\n  }\n  \n  export const darkTheme = {\n    // body: '#363537',\n    text: '#FFFFFF',\n    // toggleBorder: '#6B8096',\n    // gradient: 'linear-gradient(#091236, #1E215D)',\n\n    nav: \"#5865E0\", body: \"#131822\", Card: \"#19212D\"\n  }","\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n  }\n \n  .MuiCard-root {\n    background: ${({ theme }) => theme.Card} !important;\n    color: ${({ theme }) => theme.text};\n  }\n\n    `","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\"\nconst FooterContainer = styled.div`\n  text-align: center;\n//   position: absolute;\n\n  bottom: 0;\n  width: 100% !important;\n  height: 100px !important ;\n  background: white;\n`;\n\nclass Footer extends Component {\n  render() {\n    return (\n      <FooterContainer>\n        <div style={{display: \"flex\", justifyContent:\"space-between\"}}>\n        <div>\n        <Typography component=\"h5\" variant=\"h5\">\n            So Digital lnc.\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            sodigital.co\n          </Typography>\n          </div>\n        {/* <div className=\"site-button\" > */}\n        <div style={{display: \"flex\", justifyContent:\"space-between\"}}>\n      <Button  className=\"search-button\" variant=\"contained\" color=\"primary\" style={{fontWeight: \"bolder\", margin:\"10px\"}}>\n        Apply Now\n    </Button>\n    </div>\n      {/* </div> */}\n        </div>\n      </FooterContainer>\n    );\n  }\n}\n\nexport default Footer;","import React, { useEffect, useState} from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { getJobDescription }  from '../../library/store/actions/jobActions';\n\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport \"./JobInfo.css\"\nimport { Container } from 'react-bootstrap';\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Footer from \"../../Components/Footer/Footer\"\nimport { red } from '@material-ui/core/colors';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport createDOMPurify from 'dompurify'\nimport { JSDOM } from 'jsdom'\n\nimport { useParams } from \"react-router\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    // root: {\n    //   maxWidth: 345,\n    // },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }));\n\n\nfunction JobInfo(props) {\n    // const classes = useStyles();\n    const classes = useStyles();\n\n    // const theme = useTheme();\n    // const [expanded, setExpanded] = React.useState(false);\n\n    const [mounted, setMounted] = useState(false)\n\n    let { id } = useParams();\n\n    const window = (new JSDOM('')).window\n    const DOMPurify = createDOMPurify(window)\n\n    if(!mounted){\n      // Code for componentWillMount here\n      // This code is called only one time before intial render\n      props.getJobDescription(id)\n    }   \n  \n\n    useEffect(() =>{\n      setMounted(true)\n    },[])\n  \n\n    // const handleExpandClick = () => {\n    //   setExpanded(!expanded);\n    // };\n\n    const jd = props.jobDescription\n\n    return (\n        <Container style={{paddingLeft:\"20%\", paddingRight:\"20%\"}}>\n        <Card className=\"root\">\n            <div className=\"logo-part\">\n                <Typography component=\"h5\" variant=\"h5\" className=\"topo1\">\n                    R\n                </Typography>\n            </div>\n      <div className=\"details\" style={{\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n      }}>\n        <CardContent className=\"content\">\n          <Typography component=\"h5\" variant=\"h5\">\n           {jd.company}\n          </Typography>\n          <Typography variant=\"subtitle1\" >\n           {jd.company_url}\n          </Typography>\n        </CardContent>\n      </div>\n      <div className=\"site-button\" >\n      <Button href={jd.company_url}  className=\"search-button\" variant=\"contained\"  style={{fontWeight: \"bolder\", margin:\"30px\"}}>\n        Company site\n    </Button>\n      </div>\n    </Card>\n{/* ============================== */}\n    <div style={{marginBottom:\"20px\"}}>\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n        //     R\n        //   </Avatar>\n        // }\n        action={\n            <Button href={jd.company_url}  className=\"search-button\" variant=\"contained\"  style={{fontWeight: \"bolder\", margin:\"30px\"}}>\n            Company site\n        </Button>\n        }\n        title={jd.title}\n        subheader={jd.location}\n      />\n      <CardContent >\n        <Typography  variant=\"body2\"  component=\"p\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(jd.description) }}>\n     {/* {jd.description} */}\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n{/* ===================================== */}\n<div style={{marginBottom:\"20px\", backgroundColor:\"#8b26c5\"}}>\n<Card className={classes.root} style={{backgroundColor: \"#8b26c5\"}}>\n      <CardHeader\n        title=\"How to Apply\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\"  component=\"p\" dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(jd.how_to_apply) }}>\n        </Typography>\n      </CardContent>\n    </Card>\n    </div>\n    <Footer/>\n    </Container>\n    \n    )\n}\n\nconst mapStateToProps = state => ({\n   jobDescription: state.jobs.item\n})\n\nexport default connect(mapStateToProps, { getJobDescription\n})(JobInfo);\n\n\n","import React, { useState, useEffect } from 'react';\nimport {setLightTheme, setDarkTheme, toggleTheme} from '../src/library/store/actions/themeActions'\nimport { connect } from 'react-redux'\nimport './App.css';\nimport Dashboard from '../src/Containers/Dashboard/dashboard'\nimport NavBar from \"../src/Components/Navbar/Navbar\"\nimport {HashRouter as Router, Switch, Route} from \"react-router-dom\"\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\n\nimport JobInfo from \"./Containers/JobInfo/JobInfo\"\n\nfunction App(props) {\n\n   const [mounted, setMounted] = useState(false)\n\n\n  if(!mounted){\n    if( localStorage.getItem(\"toggle\") === true){\n      props.toggleTheme(true)\n    }else{\n      props.toggleTheme(false)\n    }\n  }\n\n  useEffect(() =>{\n     setMounted(true)\n  },[])\n\n\n  // if( localStorage.getItem(\"toggle\") == false){\n  //   props.toggleTheme(true)\n  // }else{\n  //   props.toggleTheme(false)\n  // }\n  \n  return (\n<div className=\"App\">\n<ThemeProvider theme={props.theme === 'light' ? lightTheme : darkTheme}>\n<GlobalStyles />\n<Router>\n        <NavBar />\n        <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route exact path='/JobInfo/:id' component={JobInfo} />\n          </Switch>\n      </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  theme: state.themes.theme\n})\n\n\nexport default connect(mapStateToProps, {setLightTheme, setDarkTheme, toggleTheme})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \n  fetchJobs, \n  fetchCurrentLocationJobs, \n  fetchTermJobs, \n  fetchGivenLocationJobs, \n  fetchFullTimeJobs, \n  fetchFilterJobs,\n  getJobDescription\n} from '../actions/jobActions'\n\nconst initialState = {\n    items: [],\n    error: \"\",\n    response: \"\",\n    item: {},\n    loading: false,\n    fullTime: false,\n    description: \"\",\n    location: \"\",\n    latitude: \"\",\n    longitude: \"\",\n}\n\nexport const jobReducer = (state=initialState, action) => {\n  console.log(action.payload,\"---payload is here---\")\n    switch(action.type) {\n      case fetchJobs:\n        return {\n          ...state,\n          response: action.payload,\n          items: [],\n          error: action.error\n        };\n        case fetchCurrentLocationJobs: \n         return {\n           ...state,\n           items: action.payload,\n           latitude: action.lat,\n           longitude: action.long,\n           error: action.error\n         }\n         case fetchTermJobs: \n         return {\n           ...state,\n           items: action.payload,\n           description: action.desc,\n           error: action.error\n         }\n         case fetchGivenLocationJobs:\n         return {\n          ...state,\n          items: action.payload,\n          location: action.location,\n          error: action.error\n         }\n         case fetchFullTimeJobs:\n           return {\n             ...state,\n             items: action.payload,\n             fullTime: action.fullTime,\n             error: action.error\n           }\n           case fetchFilterJobs: \n           return {\n             ...state,\n             items: action.payload,\n             description: action.description,\n             fullTime: action.full_time,\n             location: action.location,\n             error: action.error\n           }\n           case getJobDescription: \n           return {\n             ...state,\n             item: action.payload,\n             error: action.error\n           }\n       default: \n       return state\n    }\n}","import { setLightTheme, setDarkTheme, toggleTheme } from '../actions/themeActions'\n\nconst initialState = {\n    theme: \"light\",\n    toggle: false\n}\n\nexport const themeReducer = (state=initialState, action) => {\n    switch(action.type){\n        case setLightTheme: \n        return {\n            ...state,\n            theme: action.payload\n        }\n        case setDarkTheme: \n        return {\n            ...state,\n            theme: action.payload\n        }\n        case toggleTheme:\n        if(localStorage.getItem(\"toggle\") === false){\n            return {\n                ...state,\n                theme: \"light\",\n                toggle: action.payload\n            }\n        }else{\n            return {\n                ...state,\n                theme: \"dark\",\n                toggle: action.payload\n            }\n        }\n      \n        default: \n        console.log(initialState.toggle,\"---default hits everytime---\")\n        return{\n            theme: \"light\",\n            toggle: false\n        }\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { jobReducer } from './reducers/jobReducer'\nimport { themeReducer } from './reducers/themeReducer'\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst initalState = {};\n\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n    jobs: jobReducer,\n    themes: themeReducer\n});\n\nconst persistConfig = {\n    key: 'themeReducer',\n    storage: storage,\n    whitelist: [themeReducer] // which reducer want to store\n  };\n  const pReducer = persistReducer(persistConfig, rootReducer);\n\n  \nconst store = createStore(pReducer, initalState, applyMiddleware(...middleware));\n\n\nexport const persistor = persistStore(store);\nexport default store;\nexport const dispatchAction = action => store.dispatch(action);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from '../src/library/store/store'\nimport persistor from '../src/library/store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} persistor={persistor}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}